meantemps
sumtemps <- c(rowSums(temp_matrix))
sumtemps
##meantemps <- sumtemps/3
##meantemps
sumtemps <- c(rowSums(temp_matrix))
sumtemps
##meantemps <- sumtemps/3
##meantemps
sumtemps <- c(rowSums(temp_matrix))
sumtemps
temp_matrix
temp_matrix
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
colnames(temp_matrix) <- scientists
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
colnames(temp_matrix) <- scientists
temperatures <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
temp_matrix <- matrix(temperatures, nrow = 8, byrow = T)
temp_matrix
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
colnames(temp_matrix) <- scientists
rownames(temp_matrix) <- springnames
temp_matrix
temp_matrix
tempsums <- c(rowSums(temp_matrix))
meantemps <- tempsums/3
meantemps
temp_matrix <- cbind(temp_matrix, meantemps)
temp_matrix <- cbind(temp_matrix, meantemps)
temp_matrix
tempsums <- c(rowSums(temp_matrix)/3)
meantemps
temp_matrix <- cbind(temp_matrix, meantemps)
temp_matrix
final_temp_matrix <- cbind(temp_matrix, meantemps)
final_temp_matrix <- cbind(temp_matrix, meantemps)
final_temp_matrix
View(all_harry_potter_matrix)
tempsums <- c(rowSums(temp_matrix)/3)
meantemps
tempsums <- c(rowSums(temp_matrix)/3)
meantemps
temp_matrix
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
colnames(temp_matrix) <- scientists
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
colnames(temp_matrix) <- scientists
tempsums <- c(rowSums(temp_matrix))
meantemps <- tempsums/3
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
colnames(temp_matrix) <- scientists
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
colnames(temp_matrix) <- scientists
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
colnames(temp_matrix) <- scientists
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
colnames(temp_matrix) <- scientists
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
colnames(temp_matrix) <- scientists
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
colnames(temp_matrix) <- scientists
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
#colnames(temp_matrix) <- scientists
rownames(temp_matrix) <- springnames
temp_matrix
temperatures <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
temps_matrix <- matrix(temperatures, nrow = 8, byrow = T)
temps_matrix
springnames <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
scientists <- c("Jill", "Steven", "Susan")
colnames(temps_matrix) <- scientists
rownames(temps_matrix) <- springnames
temps_matrix
tempsums <- c(rowSums(temps_matrix))
meantemps <- tempsums/3
tempsums <- c(rowSums(temps_matrix))
meantemps <- tempsums/3
meantemps
new_temps_matrix <- cbind(temps_matrix, meantemps)
new_temps_matrix
new_temps_matrix <- cbind(temps_matrix, meantemps)
new_temps_matrix
new_temps_matrix[2,3]
jilltemps <- new_temps_matrix[,1]
jilltemps
jilltemps <- new_temps_matrix[,1]
jilltemps
mean(jilltemps)
sd(jilltemps)
table(msleep)
library(tidyverse)
?msleep
#The data was taken from "V. M. Savage and G. B. West. A quantitative, theoretical framework for understanding mammalian sleep. Proceedings of the National Academy of Sciences, 104 (3):1051-1056, 2007."
?help
sleep <- msleep
sleep
dim(sleep)
#The dimensions are 83x11
is.na(sleep)
#There are NAs in the data. When we use the is.na(sleep) function, the data frame opens up with a bunch of logical values, where TRUE indicates the presence of NA. And the table had many TRUE values.
names(sleep)
table(sleep$vore)
#There are 32 herbivores
small <- filter(msleep, bodywt<=1)
large <- filter(msleep, bodywt>=200)
mean(small$bodywt, na.rm=TRUE)
#mean of small animals' weight
mean(large$bodywt, na.rm=TRUE)
#mean of large animals' weight
mean(small$sleep_total, na.rm=TRUE)
mean(large$sleep_total, na.rm=TRUE)
table(sleep)
max(sleep$sleep_total)
max(sleep$sleep_total)
filter(sleep$sleep_total)
max(sleep$sleep_total)
table(sleep$sleep_total)
max(sleep$sleep_total)
filter(sleep, sleep_max >= 19.9)
filter(sleep, sleep_total >= 19.9)
library(tidyverse)
?msleep
#The data was taken from "V. M. Savage and G. B. West. A quantitative, theoretical framework for understanding mammalian sleep. Proceedings of the National Academy of Sciences, 104 (3):1051-1056, 2007."
?help
sleep <- msleep
sleep
dim(sleep)
#The dimensions are 83x11
is.na(sleep)
#There are NAs in the data. When we use the is.na(sleep) function, the data frame opens up with a bunch of logical values, where TRUE indicates the presence of NA. And the table had many TRUE values.
names(sleep)
table(sleep$vore)
#There are 32 herbivores
small <- filter(msleep, bodywt<=1)
large <- filter(msleep, bodywt>=200)
mean(small$bodywt, na.rm=TRUE)
#mean of small animals' weight
mean(large$bodywt, na.rm=TRUE)
#mean of large animals' weight
mean(small$sleep_total, na.rm=TRUE)
mean(large$sleep_total, na.rm=TRUE)
max(sleep$sleep_total)
#animal that sleeps most sleeps 19.9 hours
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
dim(homerange) #dimensions
names(homerange) #column names
str(homerange) #classes for each column/variable
summary(homerange) #summary
homerange$taxon <- as.factor(homerange$taxon) #changing taxon to factor
homerange$order <- as.factor(homerange$order) #changing order to factor
levels(homerange$taxon)
levels(homerange$order)
homerange$taxon
taxa <- select(homerange, - "taxon", "common.name", "class", "order", "family", "genus", "species")
taxa
View(taxa)
View(homerange)
homerange$taxon
taxa <- select(homerange, - "taxon", "common.name", "class", "order", "family", "genus", "species")
taxa
glimpse(homerange)
taxa <- select(homerange, - "taxon", "common.name", "class", "order", "family", "genus", "species")
taxa
glimpse(homerange)
taxa <- select(homerange, - "taxon", "common.name", "class", "order", "family", "genus", "species")
glimpse(homerange)
taxa <- select(homerange, "taxon", "common.name", "class", "order", "family", "genus", "species")
table(homerange$taxon)
table(homerange$trophic.guild)
carnivores <- filter(homerange, trophic.guild == "carnivore")
View(carnivores)
carnivores <- filter(homerange, trophic.guild == "carnivore")
herbivores <- filter(homerange, trophic.guild == "herbivore")
mean(carnivores$mean.hra.m2)
mean(carnivores$mean.hra.m2)
mean(herbivores$mean.hra.m2)
is.na(carnivores$mean.hra.m2)
mean(carnivores$mean.hra.m2)
mean(herbivores$mean.hra.m2)
any.na(carnivores$mean.hra.m2)
anyNA(carnivores$mean.hra.m2)
mean(carnivores$mean.hra.m2)
mean(herbivores$mean.hra.m2)
anyNA(carnivores$mean.hra.m2)
anyNA(herbivores$mean.hra.m2)
mean(carnivores$mean.hra.m2)
mean(herbivores$mean.hra.m2)
deer1 <- select(homerange, "mean mass", "log10 mass", "family", "genus", "species")
deer1 <- select(homerange, "mean.mass", "log10 mass", "family", "genus", "species")
View(carnivores)
deer1 <- select(homerange, "mean.mass.g", "log10.mass", "family", "genus", "species")
#deer <-
#puts selected taxa in another deer dataframe
deer1 <- select(homerange, "mean.mass.g", "log10.mass", "family", "genus", "species")
#transfer only deer families to deer data frame
deer <- filter(deer1, family == "cervidae")
deer
#puts selected taxa in another deer dataframe
deer1 <- select(homerange, "mean.mass.g", "log10.mass", "family", "genus", "species")
#transfer only deer families to deer data frame
deer <- filter(deer1, family == "cervidae")
arrange(deer)
#puts selected taxa in another deer dataframe
deer1 <- select(homerange, "mean.mass.g", "log10.mass", "family", "genus", "species")
#transfer only deer families to deer data frame
deer <- filter(deer1, family == "cervidae")
arrange(deer$mean.mass.g)
#puts selected taxa in another deer dataframe
deer1 <- select(homerange, "mean.mass.g", "log10.mass", "family", "genus", "species")
#transfer only deer families to deer data frame
deer <- filter(deer1, family == "cervidae")
arrange(deer$mean.mass.g)
#puts selected taxa in another deer dataframe
deer1 <- select(homerange, "mean.mass.g", "log10.mass", "family", "genus", "species")
#transfer only deer families to deer data frame
deer <- filter(deer1, family == "cervidae")
arrange(deer, mean.mass.g)
#puts selected taxa in another deer dataframe
deer1 <- select(homerange, "mean.mass.g", "log10.mass", "family", "genus", "species")
#transfer only deer families to deer data frame
deer <- filter(deer1, family == "cervidae")
arrange(deer, log.10.mass)
#puts selected taxa in another deer dataframe
deer1 <- select(homerange, "mean.mass.g", "log10.mass", "family", "genus", "species")
#transfer only deer families to deer data frame
deer <- filter(deer1, family == "cervidae")
arrange(deer, log10.mass)
#puts selected taxa in another deer dataframe
deer1 <- select(homerange, "mean.mass.g", "log10.mass", "family", "genus", "species")
#transfer only deer families to deer data frame
deer <- filter(deer1, family == "cervidae")
arrange(deer, desc(log10.mass))
#puts selected taxa in another deer dataframe
deer1 <- select(homerange, "mean.mass.g", "log10.mass", "family", "genus", "species")
#transfer only deer families to deer data frame
deer <- filter(deer1, family == "cervidae")
arrange(deer, desc(log10.mass)) #descending order of log10mass
filter(homerange, genus == "alces")
filter(homerange, family == "snake")
filter(homerange, family == "snakes")
filter(homerange, genus == "snake")
filter(homerange, genus == "snakes")
filter(homerange, taxon == "snakes")
snakes <- filter(homerange, taxon == "snakes")
arrange(snakes, mean.hra.m2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
dim(homerange) #dimensions
names(homerange) #column names
str(homerange) #classes for each column/variable
summary(homerange) #summary
homerange$taxon <- as.factor(homerange$taxon) #changing taxon to factor
homerange$order <- as.factor(homerange$order) #changing order to factor
levels(homerange$taxon)
levels(homerange$order)
glimpse(homerange)
taxa <- select(homerange, "taxon", "common.name", "class", "order", "family", "genus", "species")
table(homerange$taxon)
table(homerange$trophic.guild)
#there are 342 carnivores and 227 herbivores
carnivores <- filter(homerange, trophic.guild == "carnivore")
herbivores <- filter(homerange, trophic.guild == "herbivore")
anyNA(carnivores$mean.hra.m2)
anyNA(herbivores$mean.hra.m2)
mean(carnivores$mean.hra.m2)
mean(herbivores$mean.hra.m2)
#puts selected taxa in another deer dataframe
deer1 <- select(homerange, "mean.mass.g", "log10.mass", "family", "genus", "species")
#transfer only deer families to deer data frame
deer <- filter(deer1, family == "cervidae")
arrange(deer, desc(log10.mass)) #descending order of log10mass
filter(homerange, genus == "alces") #used to find what the commmon name is, which is moose
knitr::opts_chunk$set(echo = TRUE)
read_csv(file = "data/amniota.csv", na = c("-999"))
amniota_cleaned <- readr::read_csv(file = "data/amniota.csv", na = c("-999"))
amniota_cleaned <- readr::read_csv(file = "data/amniota.csv", na = c("-999"))
amniota_cleaned
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(skimr)
#install.packages("naniar")
library(naniar)
amniota <- readr::read_csv("data/amniota.csv")
amphibio <- readr::read_csv("data/amphibio.csv")
glimpse(amniota) #NAs are -999
glimpse(amphibio) #NAs are NAs
amniota %>%
summarize(number_nas = sum(is.na(amniota))) #There are no NAs because they are represented as numeric values, as -999
amphibio %>%
summarize(number_nas = sum(is.na(amphibio))) #There is a number output here because NAs are actually represented as NAs
amniota_tidy <- amniota %>%
na_if("-999")
naniar::miss_var_summary(amniota_tidy)
naniar::miss_var_summary(amphibio)
amniota_tidy %>%
group_by(class) %>%
summarize(nacount = sum(is.na(egg_mass_g))) #This result does make sense biologically because the reptile diversity is a lot larger than mammals and aves, so we don't know the mass of the eggs of most reptiles relative to birds and mammals. These results make me interpret NAs as placeholders to say there is no data.
amniota_tidy %>%
group_by(class) %>%
summarize(nacount = sum(is.na(egg_mass_g))) #This result does make sense biologically because the reptile diversity is a lot larger than mammals and aves, so we don't know the mass of the eggs of most reptiles relative to birds and mammals. These results make me interpret NAs as placeholders to say there is no data.
amphibio %>%
select(Fos, Ter, Aqu, Arb) %>%
miss_var_summary()
amniota_cleaned <- readr::read_csv(file = "data/amniota.csv", na = c("-999"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
#install.packages("here")
sydeneybeaches <- read_csv("data/sydneybeaches.csv")
library(here)
sydneybeaches <- read_csv(here("lab8", "data", "sydneybeaches.csv")) %>%
janitor::clean_names()
#sydneybeaches
sydneybeaches_long <- select(sydneybeaches, site, date, enterococci_cfu_100ml)
sydneybeaches_long
sydneybeaches_wide <- sydneybeaches_long %>%
pivot_wider(names_from=date,
values_from=enterococci_cfu_100ml)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
#install.packages("here")
sydeneybeaches <- read_csv("data/sydneybeaches.csv")
library(here)
sydneybeaches <- read_csv(here("lab8", "data", "sydneybeaches.csv")) %>%
janitor::clean_names()
#sydneybeaches
sydneybeaches_long <- select(sydneybeaches, site, date, enterococci_cfu_100ml)
sydneybeaches_long
sydneybeaches_wide <- sydneybeaches_long %>%
pivot_wider(names_from=date,
values_from=enterococci_cfu_100ml)
sydneybeaches_wide <- sydneybeaches_long %>%
pivot_wider(names_from=date,
values_from=enterococci_cfu_100ml)
sydneybeaches_wide
sydneybeaches_wide %>%
pivot_longer(-site, names_to = "date",
values_to = "enterococci_cfu_100ml")
sydneybeaches_long %>%
separate(date, into = c("day", "month", "year"), sep="/")
mean_year_sydneybeaches_ <- sydneybeaches_long %>%
group_by(site, year) %>%
summarize(mean_enterococci_cfu_100ml=mean(enterococci_cfu_100ml, na.rm=T))
mean_year_sydneybeaches_ <- sydneybeaches_long %>%
separate(date, into = c("day", "month", "year"), sep="/") %>%
group_by(site, year) %>%
summarize(mean_enterococci_cfu_100ml=mean(enterococci_cfu_100ml, na.rm=T))
mean_entero
mean_year_sydneybeaches_ <- sydneybeaches_long %>%
separate(date, into = c("day", "month", "year"), sep="/") %>%
select(site, year) %>%
summarize(mean_enterococci_cfu_100ml=mean(enterococci_cfu_100ml, na.rm=T))
mean_year_sydneybeaches_ <- sydneybeaches_long %>%
separate(date, into = c("day", "month", "year"), sep="/") %>%
group_by(site, year) %>%
summarize(mean_enterococci_cfu_100ml=mean(enterococci_cfu_100ml, na.rm=T))
mean_year_sydneybeaches_ <- sydneybeaches_long %>%
separate(date, into = c("day", "month", "year"), sep="/") %>%
group_by(site, year) %>%
summarize(mean_enterococci_cfu_100ml = mean(enterococci_cfu_100ml, na.rm=T))
mean_year_sydneybeaches_ <- sydneybeaches_long %>%
separate(date, into = c("day", "month", "year"), sep="/") %>%
group_by(site, year) %>%
summarise(mean_enterococci_cfu_100ml = mean(enterococci_cfu_100ml, na.rm=T))
mean_year_sydneybeaches_ <- sydneybeaches_long %>%
separate(date, into = c("day", "month", "year"), sep="/") %>%
group_by(site, year) %>%
summarize(mean_enterococci_cfu_100ml = mean(enterococci_cfu_100ml, na.rm=T))
mean_entero <- sydneybeaches_long %>%
separate(date, into=c("day", "month", "year"), sep="/") %>%
group_by(site, year) %>%
summarize(mean_enterococci_cfu_100ml=mean(enterococci_cfu_100ml, na.rm=T))
mean_entero
mean_entero <- sydneybeaches_long %>%
separate(date, into=c("day", "month", "year"), sep="/") %>%
group_by(site, year) %>%
summarize(mean_enterococci_cfu_100ml=mean(enterococci_cfu_100ml, na.rm=T))
mean_entero
mean_year_sydneybeaches_ <- sydneybeaches_long %>%
separate(date, into=c("day", "month", "year"), sep="/") %>%
group_by(site, year) %>%
summarize(mean_enterococci_cfu_100ml = mean(enterococci_cfu_100ml, na.rm = T))
mean_year_sydneybeaches <- sydneybeaches_long %>%
separate(date, into=c("day", "month", "year"), sep="/") %>%
group_by(site, year) %>%
summarize(mean_enterococci_cfu_100ml=mean(enterococci_cfu_100ml, na.rm=T))
mean_year_sydneybeaches
mean_year_sydneybeaches <- sydneybeaches_long %>%
separate(date, into = c("day", "month", "year"), sep = "/") %>%
group_by(site, year) %>%
summarize(mean_enterococci_cfu_100ml = mean(enterococci_cfu_100ml, na.rm = T))
mean_year_sydneybeaches
View(mean_year_sydneybeaches_)
View(mean_year_sydneybeaches_)
setwd("C:/Users/gauta/OneDrive/Desktop/BIS15W2023_gponugubati/BIS15W2023_gponugubati")
mean_year_sydneybeaches %>%
pivot_wider(-site, names_from = year
values_from = mean_enterococci_cfu_100ml)
mean_year_sydneybeaches %>%
pivot_wider(-site, names_from = "year"
values_from = "mean_enterococci_cfu_100ml")
mean_year_sydneybeaches %>%
pivot_wider(-site, names_from = "year",
values_from = "mean_enterococci_cfu_100ml")
mean_year_sydneybeaches %>%
pivot_wider(-site, names_from = "year")
mean_year_sydneybeaches %>%
pivot_wider(-c(site, mean_enterococci_cfu_100ml), values_from = "year")
mean_year_sydneybeaches %>%
pivot_wider(-c(site, mean_enterococci_cfu_100ml), names_from = "year")
mean_year_sydneybeaches %>%
pivot_wider(-site, names_from = year,
values_from = mean_enterococci_cfu_100ml)
mean_year_sydneybeaches %>%
pivot_wider(-site, names_from = year)
mean_year_sydneybeaches %>%
pivot_wider(-c(site, mean_enterococci_cfu_100ml), names_from = year)
mean_year_sydneybeaches %>%
pivot_wider(-site, names_from = year,
values_from = mean_enterococci_cfu_100ml)
mean_year_sydneybeaches_wide <- mean_year_sydneybeaches%>%
pivot_wider(-site, names_from = year,
values_from = mean_enterococci_cfu_100ml)
mean_year_sydneybeaches_wide <- mean_year_sydneybeaches%>%
pivot_wider(-site, names_from = year,
values_from = mean_enterococci_cfu_100ml)
mean_year_sydneybeaches_wide
mean_year_sydneybeaches_wide <- mean_year_sydneybeaches%>%
pivot_wider(names_from = year,
values_from = mean_enterococci_cfu_100ml)
mean_year_sydneybeaches_wide
mean_year_sydneybeaches_wide %>%
```
mean_year_sydneybeaches_wide <- mean_year_sydneybeaches%>%
pivot_wider(names_from = year,
values_from = mean_enterococci_cfu_100ml)
mean_year_sydneybeaches_wide
mean_year_sydneybeaches_wide %>%
arrange(desc(2018))
mean_year_sydneybeaches_wide %>%
arrange(desc(2018))
mean_year_sydneybeaches_wide %>%
select(2018)
mean_year_sydneybeaches_wide %>%
select(site, 2018)
mean_year_sydneybeaches_wide %>%
select(site, "2018")
mean_year_sydneybeaches_wide %>%
select(site, "2018") %>%
arrange(desc("2018"))
mean_year_sydneybeaches_wide %>%
select(site, "2018") %>%
arrange(desc("2018"))
mean_year_sydneybeaches_wide %>%
select(site, "2018") %>%
arrange(desc("2018"))
mean_year_sydneybeaches_wide %>%
select(site, "2018") %>%
slice_max(2018)
mean_year_sydneybeaches_wide %>%
select(site, "2018") %>%
mean_year_sydneybeaches_wide %>%
select(site, "2018")
mean_year_sydneybeaches %>%
select(site, mean_enterococci_cfu_100ml) %>%
slice_max(mean_enterococci_cfu_100ml, n=1)
#The most polluted
mean_year_sydneybeaches %>%
filter(year = "2018") %>%
select(site, mean_enterococci_cfu_100ml) %>%
slice_max(mean_enterococci_cfu_100ml, n=1)
mean_year_sydneybeaches %>%
filter(year == "2018") %>%
select(site, mean_enterococci_cfu_100ml) %>%
slice_max(mean_enterococci_cfu_100ml, n=1)
#The most polluted
mean_year_sydneybeaches %>%
filter(year == "2018") %>%
select(site, mean_enterococci_cfu_100ml) %>%
arrange(desc(mean_enterococci_cfu_100ml))
#The most polluted
mean_year_sydneybeaches %>%
filter(year == "2018") %>%
select(site, mean_enterococci_cfu_100ml) %>%
arrange(desc(mean_enterococci_cfu_100ml))
#The most polluted beach in 2018 was South Maroubra Rockpool (122.187500)
library(tidyverse)
library(janitor)
sydeneybeaches <- read_csv("data/sydneybeaches.csv")
library(here)
sydneybeaches <- read_csv(here("lab8", "data", "sydneybeaches.csv")) %>%
janitor::clean_names()
sydneybeaches_long <- select(sydneybeaches, site, date, enterococci_cfu_100ml)
sydneybeaches_long
